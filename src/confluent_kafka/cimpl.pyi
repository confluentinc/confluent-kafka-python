from concurrent.futures import Future
from typing import Any, Callable, ClassVar, Dict, List, Optional, Tuple

from typing import overload
ACL_OPERATION_ALL: int
ACL_OPERATION_ALTER: int
ACL_OPERATION_ALTER_CONFIGS: int
ACL_OPERATION_ANY: int
ACL_OPERATION_CLUSTER_ACTION: int
ACL_OPERATION_CREATE: int
ACL_OPERATION_DELETE: int
ACL_OPERATION_DESCRIBE: int
ACL_OPERATION_DESCRIBE_CONFIGS: int
ACL_OPERATION_IDEMPOTENT_WRITE: int
ACL_OPERATION_READ: int
ACL_OPERATION_UNKNOWN: int
ACL_OPERATION_WRITE: int
ACL_PERMISSION_TYPE_ALLOW: int
ACL_PERMISSION_TYPE_ANY: int
ACL_PERMISSION_TYPE_DENY: int
ACL_PERMISSION_TYPE_UNKNOWN: int
CONFIG_SOURCE_DEFAULT_CONFIG: int
CONFIG_SOURCE_DYNAMIC_BROKER_CONFIG: int
CONFIG_SOURCE_DYNAMIC_DEFAULT_BROKER_CONFIG: int
CONFIG_SOURCE_DYNAMIC_TOPIC_CONFIG: int
CONFIG_SOURCE_STATIC_BROKER_CONFIG: int
CONFIG_SOURCE_UNKNOWN_CONFIG: int
OFFSET_BEGINNING: int
OFFSET_END: int
OFFSET_INVALID: int
OFFSET_STORED: int
RESOURCE_ANY: int
RESOURCE_BROKER: int
RESOURCE_GROUP: int
RESOURCE_PATTERN_ANY: int
RESOURCE_PATTERN_LITERAL: int
RESOURCE_PATTERN_MATCH: int
RESOURCE_PATTERN_PREFIXED: int
RESOURCE_PATTERN_UNKNOWN: int
RESOURCE_TOPIC: int
RESOURCE_UNKNOWN: int
TIMESTAMP_CREATE_TIME: int
TIMESTAMP_LOG_APPEND_TIME: int
TIMESTAMP_NOT_AVAILABLE: int

class TopicPartition:
    error: Any
    metadata: Any
    offset: Any
    partition: int
    topic: str
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def __eq__(self, other: object) -> Any: ...
    def __ge__(self, other: object) -> Any: ...
    def __gt__(self, other: object) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other: object) -> Any: ...
    def __lt__(self, other: object) -> Any: ...
    def __ne__(self, other: object) -> Any: ...

class Consumer:
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def assign(self, partitions: object) -> Any: ...
    def assignment(self, *args: object, **kwargs: object) -> Any: ...
    def close(self, *args: object, **kwargs: object) -> Any: ...
    def commit(self, message: Optional[object] = None, offsets: Optional[object] = None, asynchronous: Optional[bool] = None) -> Any: ...
    def committed(self, *args: object, **kwargs: object) -> Any: ...
    def consume(self, num_messages: int, timeout: float) -> Any: ...
    def consumer_group_metadata(self) -> Any: ...
    def get_watermark_offsets(self, *args: object, **kwargs: object) -> Any: ...
    def incremental_assign(self, partitions: object) -> Any: ...
    def incremental_unassign(self, partitions: object) -> Any: ...
    def list_topics(self, *args: object, **kwargs: object) -> Any: ...
    def memberid(self) -> Any: ...
    def offsets_for_times(self, *args: object, **kwargs: object) -> Any: ...
    def pause(self, partitions: object) -> Any: ...
    def poll(self, timeout: float) -> Optional[Message]: ...
    def position(self, partitions: object) -> Any: ...
    def resume(self, partitions: object) -> Any: ...
    @overload
    def seek(self, partition: object) -> Any: ...
    @overload
    def seek(self) -> Any: ...
    def store_offsets(self, *args: object, **kwargs: object) -> Any: ...
    def subscribe(self, topic: str, on_assign: Optional[Callable[[Consumer, List[TopicPartition]], None]] = None, on_revoke:Optional[Callable] = None) -> Any: ...
    def unassign(self, *args: object, **kwargs: object) -> Any: ...
    def unsubscribe(self, *args: object, **kwargs: object) -> Any: ...

class KafkaError:
    BROKER_NOT_AVAILABLE: ClassVar[int] = ...
    CLUSTER_AUTHORIZATION_FAILED: ClassVar[int] = ...
    CONCURRENT_TRANSACTIONS: ClassVar[int] = ...
    COORDINATOR_LOAD_IN_PROGRESS: ClassVar[int] = ...
    COORDINATOR_NOT_AVAILABLE: ClassVar[int] = ...
    DELEGATION_TOKEN_AUTHORIZATION_FAILED: ClassVar[int] = ...
    DELEGATION_TOKEN_AUTH_DISABLED: ClassVar[int] = ...
    DELEGATION_TOKEN_EXPIRED: ClassVar[int] = ...
    DELEGATION_TOKEN_NOT_FOUND: ClassVar[int] = ...
    DELEGATION_TOKEN_OWNER_MISMATCH: ClassVar[int] = ...
    DELEGATION_TOKEN_REQUEST_NOT_ALLOWED: ClassVar[int] = ...
    DUPLICATE_RESOURCE: ClassVar[int] = ...
    DUPLICATE_SEQUENCE_NUMBER: ClassVar[int] = ...
    ELECTION_NOT_NEEDED: ClassVar[int] = ...
    ELIGIBLE_LEADERS_NOT_AVAILABLE: ClassVar[int] = ...
    FEATURE_UPDATE_FAILED: ClassVar[int] = ...
    FENCED_INSTANCE_ID: ClassVar[int] = ...
    FENCED_LEADER_EPOCH: ClassVar[int] = ...
    FETCH_SESSION_ID_NOT_FOUND: ClassVar[int] = ...
    GROUP_AUTHORIZATION_FAILED: ClassVar[int] = ...
    GROUP_ID_NOT_FOUND: ClassVar[int] = ...
    GROUP_MAX_SIZE_REACHED: ClassVar[int] = ...
    GROUP_SUBSCRIBED_TO_TOPIC: ClassVar[int] = ...
    ILLEGAL_GENERATION: ClassVar[int] = ...
    ILLEGAL_SASL_STATE: ClassVar[int] = ...
    INCONSISTENT_GROUP_PROTOCOL: ClassVar[int] = ...
    INCONSISTENT_VOTER_SET: ClassVar[int] = ...
    INVALID_COMMIT_OFFSET_SIZE: ClassVar[int] = ...
    INVALID_CONFIG: ClassVar[int] = ...
    INVALID_FETCH_SESSION_EPOCH: ClassVar[int] = ...
    INVALID_GROUP_ID: ClassVar[int] = ...
    INVALID_MSG: ClassVar[int] = ...
    INVALID_MSG_SIZE: ClassVar[int] = ...
    INVALID_PARTITIONS: ClassVar[int] = ...
    INVALID_PRINCIPAL_TYPE: ClassVar[int] = ...
    INVALID_PRODUCER_EPOCH: ClassVar[int] = ...
    INVALID_PRODUCER_ID_MAPPING: ClassVar[int] = ...
    INVALID_RECORD: ClassVar[int] = ...
    INVALID_REPLICATION_FACTOR: ClassVar[int] = ...
    INVALID_REPLICA_ASSIGNMENT: ClassVar[int] = ...
    INVALID_REQUEST: ClassVar[int] = ...
    INVALID_REQUIRED_ACKS: ClassVar[int] = ...
    INVALID_SESSION_TIMEOUT: ClassVar[int] = ...
    INVALID_TIMESTAMP: ClassVar[int] = ...
    INVALID_TRANSACTION_TIMEOUT: ClassVar[int] = ...
    INVALID_TXN_STATE: ClassVar[int] = ...
    INVALID_UPDATE_VERSION: ClassVar[int] = ...
    KAFKA_STORAGE_ERROR: ClassVar[int] = ...
    LEADER_NOT_AVAILABLE: ClassVar[int] = ...
    LISTENER_NOT_FOUND: ClassVar[int] = ...
    LOG_DIR_NOT_FOUND: ClassVar[int] = ...
    MEMBER_ID_REQUIRED: ClassVar[int] = ...
    MSG_SIZE_TOO_LARGE: ClassVar[int] = ...
    NETWORK_EXCEPTION: ClassVar[int] = ...
    NON_EMPTY_GROUP: ClassVar[int] = ...
    NOT_CONTROLLER: ClassVar[int] = ...
    NOT_COORDINATOR: ClassVar[int] = ...
    NOT_ENOUGH_REPLICAS: ClassVar[int] = ...
    NOT_ENOUGH_REPLICAS_AFTER_APPEND: ClassVar[int] = ...
    NOT_LEADER_FOR_PARTITION: ClassVar[int] = ...
    NO_ERROR: ClassVar[int] = ...
    NO_REASSIGNMENT_IN_PROGRESS: ClassVar[int] = ...
    OFFSET_METADATA_TOO_LARGE: ClassVar[int] = ...
    OFFSET_NOT_AVAILABLE: ClassVar[int] = ...
    OFFSET_OUT_OF_RANGE: ClassVar[int] = ...
    OPERATION_NOT_ATTEMPTED: ClassVar[int] = ...
    OUT_OF_ORDER_SEQUENCE_NUMBER: ClassVar[int] = ...
    POLICY_VIOLATION: ClassVar[int] = ...
    PREFERRED_LEADER_NOT_AVAILABLE: ClassVar[int] = ...
    PRINCIPAL_DESERIALIZATION_FAILURE: ClassVar[int] = ...
    PRODUCER_FENCED: ClassVar[int] = ...
    REASSIGNMENT_IN_PROGRESS: ClassVar[int] = ...
    REBALANCE_IN_PROGRESS: ClassVar[int] = ...
    RECORD_LIST_TOO_LARGE: ClassVar[int] = ...
    REPLICA_NOT_AVAILABLE: ClassVar[int] = ...
    REQUEST_TIMED_OUT: ClassVar[int] = ...
    RESOURCE_NOT_FOUND: ClassVar[int] = ...
    SASL_AUTHENTICATION_FAILED: ClassVar[int] = ...
    SECURITY_DISABLED: ClassVar[int] = ...
    STALE_BROKER_EPOCH: ClassVar[int] = ...
    STALE_CTRL_EPOCH: ClassVar[int] = ...
    THROTTLING_QUOTA_EXCEEDED: ClassVar[int] = ...
    TOPIC_ALREADY_EXISTS: ClassVar[int] = ...
    TOPIC_AUTHORIZATION_FAILED: ClassVar[int] = ...
    TOPIC_DELETION_DISABLED: ClassVar[int] = ...
    TOPIC_EXCEPTION: ClassVar[int] = ...
    TRANSACTIONAL_ID_AUTHORIZATION_FAILED: ClassVar[int] = ...
    TRANSACTION_COORDINATOR_FENCED: ClassVar[int] = ...
    UNACCEPTABLE_CREDENTIAL: ClassVar[int] = ...
    UNKNOWN: ClassVar[int] = ...
    UNKNOWN_LEADER_EPOCH: ClassVar[int] = ...
    UNKNOWN_MEMBER_ID: ClassVar[int] = ...
    UNKNOWN_PRODUCER_ID: ClassVar[int] = ...
    UNKNOWN_TOPIC_OR_PART: ClassVar[int] = ...
    UNSTABLE_OFFSET_COMMIT: ClassVar[int] = ...
    UNSUPPORTED_COMPRESSION_TYPE: ClassVar[int] = ...
    UNSUPPORTED_FOR_MESSAGE_FORMAT: ClassVar[int] = ...
    UNSUPPORTED_SASL_MECHANISM: ClassVar[int] = ...
    UNSUPPORTED_VERSION: ClassVar[int] = ...
    _ALL_BROKERS_DOWN: ClassVar[int] = ...
    _APPLICATION: ClassVar[int] = ...
    _ASSIGNMENT_LOST: ClassVar[int] = ...
    _ASSIGN_PARTITIONS: ClassVar[int] = ...
    _AUTHENTICATION: ClassVar[int] = ...
    _AUTO_OFFSET_RESET: ClassVar[int] = ...
    _BAD_COMPRESSION: ClassVar[int] = ...
    _BAD_MSG: ClassVar[int] = ...
    _CONFLICT: ClassVar[int] = ...
    _CRIT_SYS_RESOURCE: ClassVar[int] = ...
    _DESTROY: ClassVar[int] = ...
    _EXISTING_SUBSCRIPTION: ClassVar[int] = ...
    _FAIL: ClassVar[int] = ...
    _FATAL: ClassVar[int] = ...
    _FENCED: ClassVar[int] = ...
    _FS: ClassVar[int] = ...
    _GAPLESS_GUARANTEE: ClassVar[int] = ...
    _INCONSISTENT: ClassVar[int] = ...
    _INTR: ClassVar[int] = ...
    _INVALID_ARG: ClassVar[int] = ...
    _INVALID_TYPE: ClassVar[int] = ...
    _IN_PROGRESS: ClassVar[int] = ...
    _ISR_INSUFF: ClassVar[int] = ...
    _KEY_DESERIALIZATION: ClassVar[int] = ...
    _KEY_SERIALIZATION: ClassVar[int] = ...
    _MAX_POLL_EXCEEDED: ClassVar[int] = ...
    _MSG_TIMED_OUT: ClassVar[int] = ...
    _NODE_UPDATE: ClassVar[int] = ...
    _NOENT: ClassVar[int] = ...
    _NOOP: ClassVar[int] = ...
    _NOT_CONFIGURED: ClassVar[int] = ...
    _NOT_IMPLEMENTED: ClassVar[int] = ...
    _NO_OFFSET: ClassVar[int] = ...
    _OUTDATED: ClassVar[int] = ...
    _PARTIAL: ClassVar[int] = ...
    _PARTITION_EOF: ClassVar[int] = ...
    _PREV_IN_PROGRESS: ClassVar[int] = ...
    _PURGE_INFLIGHT: ClassVar[int] = ...
    _PURGE_QUEUE: ClassVar[int] = ...
    _QUEUE_FULL: ClassVar[int] = ...
    _READ_ONLY: ClassVar[int] = ...
    _RESOLVE: ClassVar[int] = ...
    _RETRY: ClassVar[int] = ...
    _REVOKE_PARTITIONS: ClassVar[int] = ...
    _SSL: ClassVar[int] = ...
    _STATE: ClassVar[int] = ...
    _TIMED_OUT: ClassVar[int] = ...
    _TIMED_OUT_QUEUE: ClassVar[int] = ...
    _TRANSPORT: ClassVar[int] = ...
    _UNDERFLOW: ClassVar[int] = ...
    _UNKNOWN_BROKER: ClassVar[int] = ...
    _UNKNOWN_GROUP: ClassVar[int] = ...
    _UNKNOWN_PARTITION: ClassVar[int] = ...
    _UNKNOWN_PROTOCOL: ClassVar[int] = ...
    _UNKNOWN_TOPIC: ClassVar[int] = ...
    _UNSUPPORTED_FEATURE: ClassVar[int] = ...
    _VALUE_DESERIALIZATION: ClassVar[int] = ...
    _VALUE_SERIALIZATION: ClassVar[int] = ...
    _WAIT_CACHE: ClassVar[int] = ...
    _WAIT_COORD: ClassVar[int] = ...
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def code(self, *args: object, **kwargs: object) -> Any: ...
    def fatal(self, *args: object, **kwargs: object) -> Any: ...
    def name(self, *args: object, **kwargs: object) -> Any: ...
    def retriable(self, *args: object, **kwargs: object) -> Any: ...
    def str(self, *args: object, **kwargs: object) -> Any: ...
    def txn_requires_abort(self, *args: object, **kwargs: object) -> Any: ...
    def __eq__(self, other: object) -> Any: ...
    def __ge__(self, other: object) -> Any: ...
    def __gt__(self, other: object) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other: object) -> Any: ...
    def __lt__(self, other: object) -> Any: ...
    def __ne__(self, other: object) -> Any: ...

class KafkaException(Exception): ...

class Message:
    def error(self) -> Any: ...
    def headers(self, *args: object, **kwargs: object) -> Any: ...
    def key(self, *args: object, **kwargs: object) -> Any: ...
    def latency(self, *args: object, **kwargs: object) -> Any: ...
    def offset(self, *args: object, **kwargs: object) -> Any: ...
    def partition(self, *args: object, **kwargs: object) -> Any: ...
    def set_headers(self, *args: object, **kwargs: object) -> Any: ...
    def set_key(self, *args: object, **kwargs: object) -> Any: ...
    def set_value(self, *args: object, **kwargs: object) -> Any: ...
    def timestamp(self, *args: object, **kwargs: object) -> Any: ...
    def topic(self, *args: object, **kwargs: object) -> Any: ...
    def value(self) -> Any: ...
    def __len__(self) -> Any: ...

class NewPartitions:
    new_total_count: Any
    replica_assignment: Any
    topic: Any
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def __eq__(self, other: object) -> Any: ...
    def __ge__(self, other: object) -> Any: ...
    def __gt__(self, other: object) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other: object) -> Any: ...
    def __lt__(self, other: object) -> Any: ...
    def __ne__(self, other: object) -> Any: ...

class NewTopic:
    config: Any
    num_partitions: Any
    replica_assignment: Any
    replication_factor: Any
    topic: str
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def __eq__(self, other: object) -> Any: ...
    def __ge__(self, other: object) -> Any: ...
    def __gt__(self, other: object) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other: object) -> Any: ...
    def __lt__(self, other: object) -> Any: ...
    def __ne__(self, other: object) -> Any: ...

class Producer:
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def abort_transaction(self, *args: object, **kwargs: object) -> Any: ...
    def begin_transaction(self) -> Any: ...
    def commit_transaction(self, *args: object, **kwargs: object) -> Any: ...
    def flush(self, *args: object, **kwargs: object) -> Any: ...
    def init_transactions(self, *args: object, **kwargs: object) -> Any: ...
    def list_topics(self, *args: object, **kwargs: object) -> Any: ...
    def poll(self, *args: object, **kwargs: object) -> Any: ...
    def produce(self, topic: str, **kwargs: object) -> None: ...
    def purge(self, *args: object, **kwargs: object) -> Any: ...
    def send_offsets_to_transaction(self, *args: object, **kwargs: object) -> Any: ...
    def __len__(self) -> Any: ...

class _AdminClientImpl:
    def __init__(self, *args: object, **kwargs: object) -> None: ...
    def alter_configs(self, resources: List, f: Future, **kwargs: object) -> Any: ...
    def create_acls(self, acls: List, f: Future, **kwargs: object) -> Any: ...
    def create_partitions(self, new_partitions: List[NewPartitions], f: Future) -> Any: ...
    def create_topics(self, new_topics: List[NewTopic], f: Future) -> Dict[str, Future]: ...
    def delete_acls(self, acl_binding_filters: List, f: Future) -> Any: ...
    def delete_topics(self, topics: List[str], f: Future, **kwargs: object) -> Any: ...
    def describe_acls(self, acl_binding_filter: List, f: Future, **kwargs: object) -> Any: ...
    def describe_configs(self, resources: List, f: Future, **kwargs: object) -> Any: ...
    def list_groups(self, *args: object, **kwargs: object) -> Any: ...
    def list_topics(self, *args: object, **kwargs: object) -> Any: ...
    def poll(self) -> Any: ...
    def __len__(self) -> Any: ...

def libversion(*args: object, **kwargs: object) -> Any: ...
def version(*args: object, **kwargs: object) -> Any: ...
