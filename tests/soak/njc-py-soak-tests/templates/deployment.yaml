apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "njc-py-soak-tests.fullname" . }}
  labels:
    {{- include "njc-py-soak-tests.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "njc-py-soak-tests.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "njc-py-soak-tests.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "njc-py-soak-tests.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: secret
          secret:
            secretName: {{ include "njc-py-soak-tests.fullname" $ }}-secret
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODEIP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ include "njc-py-soak-tests.fullname" . }},service.version={{ .Values.image.tag | default .Chart.AppVersion }}"
            - name: OTEL_TRACES_EXPORTER
              value: "none"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://$(NODEIP):14317"
            - name: OTEL_METRIC_EXPORT_INTERVAL
              value: "10000"
            - name: TESTID
              value: "{{ .Values.testid }}"
          volumeMounts:
            - name: "secret"
              mountPath: "/soaktests/confluent-kafka-python/ccloud.config"
              subPath: ccloud.config
              readOnly: true
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
