version: v1.0
name: build-test-release
global_job_config:
  secrets:
    - name: vault_sem2_approle
  prologue:
    commands:
      - chmod 400 ~/.ssh/id_rsa
      - sem-version python 3.7
      - checkout
      - make install-vault
      - . mk-include/bin/vault-setup
      - . vault-sem-get-secret gitconfig
      - . vault-sem-get-secret ssh_id_rsa
      - . vault-sem-get-secret ssh_config
      - . vault-sem-get-secret netrc
      - . vault-sem-get-secret artifactory-docker-helm
      - . vault-sem-get-secret maven-settings
      - . vault-sem-get-secret cpd_gcloud
      - . vault-sem-get-secret aws_credentials
      - . vault-sem-get-secret testbreak-reporting
      - . vault-sem-get-secret python-pipenv
      - . vault-sem-get-secret v1/ci/kv/service-foundations/cc-mk-include
      - . vault-sem-get-secret dockerhub-semaphore-cred-ro
      - exec &> >(tee -a build.log)
      - make init-ci
  epilogue:
    always:
      commands:
        - make epilogue-ci

blocks:
  - name: "Wheels: OSX x64"
    run:
      when: "tag =~ '.*'"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-macos
      env_vars:
        - name: OS_NAME
          value: osx
        - name: ARCH
          value: x64
      jobs:
        - name: Build
          commands:
            - PIP_INSTALL_OPTIONS="--user" tools/wheels/build-wheels.sh "${LIBRDKAFKA_VERSION#v}" wheelhouse
            - tar -czf wheelhouse-macOS-${ARCH}.tgz wheelhouse
            - artifact push workflow wheelhouse-macOS-${ARCH}.tgz
  - name: "Wheels: OSX arm64"
    run:
      when: "tag =~ '.*'"
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-macos-arm64
      env_vars:
        - name: OS_NAME
          value: osx
        - name: CIBW_ARCHS
          value: arm64
        - name: ARCH
          value: arm64
      jobs:
        - name: Build
          commands:
            - PIP_INSTALL_OPTIONS="--user" tools/wheels/build-wheels.sh "${LIBRDKAFKA_VERSION#v}" wheelhouse
            - tar -czf wheelhouse-macOS-${ARCH}.tgz wheelhouse
            - artifact push workflow wheelhouse-macOS-${ARCH}.tgz

  - name: Source package verification with Python 3 (OSX x64) +docs
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-macos
      env_vars:
        - name: OS_NAME
          value: osx
        - name: ARCH
          value: arm64
      jobs:
        - name: Build
          commands:
            # use a virtualenv
            - python3 -m venv _venv && source _venv/bin/activate
            - pip install -r docs/requirements.txt
            - pip install -U protobuf
            # install librdkafka
            - lib_dir=dest/runtimes/$OS_NAME-$ARCH/native
            - tools/wheels/install-librdkafka.sh "${LIBRDKAFKA_VERSION#v}" dest
            - export CFLAGS="$CFLAGS -I${PWD}/dest/build/native/include"
            - export LDFLAGS="$LDFLAGS -L${PWD}/${lib_dir}"
            - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PWD/$lib_dir"
            - export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:$PWD/$lib_dir"
            # install confluent-kafka
            - python setup.py build && python setup.py install
            - make docs
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'master'"

execution_time_limit:
  hours: 1

