[build-system]
requires = [ "setuptools>=62", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "confluent-kafka"
version = "2.3.0"
description = "Confluent's Python client for Apache Kafka"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules"]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.7"
dynamic = ["dependencies", "optional-dependencies"]

[[project.authors]]
name = "Confluent Inc"
email = "support@confluent.io"

[project.urls]
Homepage = "https://github.com/confluentinc/confluent-kafka-python"

[tool.setuptools]
include-package-data = false

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies.schemaregistry = { file = ["requirements-schemaregistry.txt"] }
optional-dependencies.avro = { file = ["requirements-avro.txt", "requirements-schemaregistry.txt"] }
optional-dependencies.json = { file = ["requirements-json.txt", "requirements-schemaregistry.txt"] }
optional-dependencies.protobuf = { file = ["requirements-protobuf.txt", "requirements-schemaregistry.txt"] }
optional-dependencies.dev = { file = ["requirements-dev.txt",
    "requirements-schemaregistry.txt",
    "requirements-avro.txt", "requirements-json.txt", "requirements-protobuf.txt"] }
optional-dependencies.doc = { file = ["requirements-doc.txt",
    "requirements-schemaregistry.txt",
    "requirements-avro.txt", "requirements-json.txt", "requirements-protobuf.txt"] }
optional-dependencies.all = { file = [
    "requirements-dev.txt",
    "requirements-doc.txt",
    "requirements-schemaregistry.txt",
    "requirements-avro.txt", "requirements-json.txt", "requirements-protobuf.txt"] }

# [project.optional-dependencies]
# schema-registry = [ "requests",]
# avro = [ "fastavro<1.8.0;python_version==\"3.7\"",
#          "fastavro>=1.8.4,<2;python_version>\"3.7\"",
#          "avro>=1.11.1,<2", "confluent-kafka[schema-registry]",]
# json = [ "pyrsistent", "jsonschema", "confluent-kafka[schema-registry]",]
# protobuf = [ "protobuf", "confluent-kafka[schema-registry]",]
# dev = [ "pytest", "pytest-timeout", "flake8", "requests_mock", "build",
#         "trivup>=0.8.3", "urllib3<2.0.0;python_version<=\"3.7\"",
#         "confluent-kafka[schema-registry,avro,json,protobuf]",]
# doc = [ "sphinx", "sphinx-rtd-theme", "confluent-kafka[schema-registry,avro,json,protobuf]",]
# all = ["confluent-kafka[schema-registry,avro,json,protobuf,dev,doc]"]
